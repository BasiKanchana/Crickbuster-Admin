{"version":3,"file":"static/js/616.b06a5c15.chunk.js","mappings":"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","sources":["Components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport LoginForm from \"../Images/login-form.png\";\r\nimport LoginFormLogo from \"../Images/Logo.png\";\r\nimport * as Yup from 'yup';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  FormLabel,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Login = () => {\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const ResetPassword = () => {\r\n    navigate(\"/Forgotpassword\");\r\n  };\r\n\r\n  const LoginToDashboard = () => {\r\n    navigate(\"/dashboard\");\r\n  };\r\n\r\n  // const handleEmailChange = (e) => {\r\n  //   setEmail(e.target.value);\r\n  //   console.log(\"data\",e.target.value)\r\n  // };\r\n\r\n  // const handlePasswordChange = (e) => {\r\n  //   setPassword(e.target.value);\r\n  //   console.log(\"data2\", e.target.value);\r\n  // };\r\n\r\n  //   const login = async () => {\r\n  //     try {\r\n  //         const request = {\r\n  //             emailId: formik.values.email,\r\n  //             password: formik.values.password\r\n  //         }\r\n  //         // const response = await api.post(USER_LOGIN, request);\r\n  //         if(response.status === 200 && response.data) {\r\n  //              console.log(\"data\",response.data)\r\n  //              setEmail(formik.values.email)\r\n  //              setPassword(formik.values.password)\r\n  // navigate('/')\r\n  //         }\r\n  //     } catch (err) {\r\n  //         toaster('error', err.response?.data?.message)\r\n  //         console.log(err, \"Error\")\r\n  //     }\r\n  // };\r\n\r\n  const EmailRegex = /^[A-Za-z0-9._%+-]+@onpassive\\.com$/;\r\n  const PasswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*]).{8,}$/;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required('Please enter email')\r\n      .min(5, \"Minimum 5 characters required\")\r\n      .max(64, \"Maximum allowed characters are 64\")\r\n      .test(\"valid-description-whitespace\", \"Too many white spaces are not allowed\",\r\n        (value) => {\r\n          const consecutiveWhiteSpaces = value.match(/\\s{2,}/g);\r\n          return !consecutiveWhiteSpaces;\r\n        })\r\n      .matches(EmailRegex, \"Please enter valid email\"),\r\n\r\n    password: Yup.string()\r\n      .required('Please enter password')\r\n      .min(8, \"Minimum 8 characters required\")\r\n      .max(32, \"Maximum allowed characters are 32\")\r\n      .matches(PasswordRegex, \"Password must contain at least one Capital letter, number, and a special character\")\r\n      .matches(/^[a-zA-Z0-9 !@#$%^&*()_+{}\\[\\]:;\"'-<>,.?~\\\\/-â‚¹]+$/u,\r\n        'Only Alphabet, Number, special characters are allowed')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: validationSchema,\r\n    // onSubmit: login\r\n  });\r\n\r\n  const handleInputChange = (fieldName, value) => {\r\n    formik.setFieldValue(fieldName, value);\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"d-flex\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row p-0\">\r\n            <div className=\"col-lg-6 p-0\">\r\n              <img src={LoginForm} className=\"w-100 left-side-image\" alt=\"\" />\r\n            </div>\r\n            <div className=\"col-lg-6 d-flex justify-content-center align-items-center flex-column  py-4\">\r\n              <div\r\n                className=\"d-flex justify-content-center flex-column\"\r\n                style={{ width: \"50%\" }}\r\n              >\r\n                <img\r\n                  src={LoginFormLogo}\r\n                  alt=\"\"\r\n                  className=\"w-100 mb-5 p-0 m-0\"\r\n                />\r\n                <Form className=\"w-100\" onSubmit={formik.handleSubmit}>\r\n                  <h5 className=\"mb-4 fw-medium\">DASHBOARD LOGIN</h5>\r\n                  <FormGroup className=\"mb-3\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Email\"\r\n                      value={formik.values.email}\r\n                      onChange={e => {\r\n                        handleInputChange('email', e.target.value);\r\n                      }}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email && (\r\n                      <Form.Text className=\"text-danger\">{formik.errors.email}{' '}</Form.Text>\r\n                    )}\r\n                  </FormGroup>\r\n                  <FormGroup className=\"mb-3\">\r\n                    <FormLabel>Password</FormLabel>\r\n                    <div  className=\"LoginFormPasswordInput\">\r\n                      <FormControl\r\n                        name=\"password\"\r\n                        type={passwordVisible ? 'text' : 'password'}\r\n                        className=\"loginFormInput\"\r\n                        placeholder=\"Enter Password\"\r\n                        value={formik.values.password}\r\n                        onChange={e => {\r\n                          handleInputChange('password', e.target.value);\r\n                        }}\r\n                        onBlur={formik.handleBlur}\r\n                      />\r\n                      <FontAwesomeIcon\r\n                        icon={passwordVisible ? faEyeSlash : faEye}\r\n                        onClick={togglePasswordVisibility}\r\n                        className=\"LoginPagePasswordIcon\"\r\n                        style={{\r\n                          position: 'absolute',\r\n                          right: '10px',\r\n                          top: '50%',\r\n                          transform: 'translateY(-50%)',\r\n                          cursor: 'pointer'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    {formik.touched.password && formik.errors.password && (\r\n                      <Form.Text className=\"text-danger\">{formik.errors.password}{' '}</Form.Text>\r\n                    )}\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Button\r\n                        variant=\"link\"\r\n                        className=\"mb-3 forgotPassword-btn\"\r\n                        onClick={ResetPassword}\r\n                      >\r\n                        Forget Password?\r\n                      </Button>\r\n                    </div>\r\n                  </FormGroup>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className=\"btn login-form-btn form-control\"\r\n                    onClick={LoginToDashboard}\r\n                  >\r\n                    LOGIN\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","passwordVisible","setPasswordVisible","useState","navigate","useNavigate","validationSchema","Yup","shape","email","required","min","max","test","value","match","matches","password","formik","useFormik","initialValues","handleInputChange","fieldName","setFieldValue","_jsx","children","className","_jsxs","src","LoginForm","alt","style","width","LoginFormLogo","Form","onSubmit","handleSubmit","FormGroup","FormLabel","FormControl","name","type","placeholder","values","onChange","e","target","onBlur","handleBlur","touched","errors","Text","FontAwesomeIcon","icon","faEyeSlash","faEye","onClick","togglePasswordVisibility","position","right","top","transform","cursor","Button","variant","ResetPassword","LoginToDashboard"],"sourceRoot":""}