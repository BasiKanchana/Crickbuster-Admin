{"version":3,"file":"static/js/636.fe78d9e6.chunk.js","mappings":"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","sources":["Components/PackagesOnLive.js","Components/OrderPagination.js","Components/SalesChart.js","Components/Inquiry.js","Components/Dashboard.js"],"sourcesContent":["import React from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nconst cardData = [\r\n  { id: 1, number: \"813\", title: \"T20 2020 Cricket\" },\r\n  { id: 2, number: \"814\", title: \"T20 2020 Cricket\" },\r\n  { id: 3, number: \"815\", title: \"T20 2020 Cricket\" },\r\n  { id: 4, number: \"816\", title: \"T20 2020 Cricket\" },\r\n  { id: 5, number: \"813\", title: \"T20 2020 Cricket\" },\r\n  { id: 6, number: \"813\", title: \"T20 2020 Cricket\" },\r\n];\r\n\r\nconst PackagesOnLive = () => {\r\n  const percentage = 64;\r\n  const color = \"#742CDF\";\r\n  const options = {\r\n    chart: {\r\n      type: \"pie\",\r\n      backgroundColor: \"transparent\",\r\n      height: \"85%\",  \r\n      margin: [10, 0, 10, 0], \r\n      events: {\r\n        render: function () {\r\n          const chart = this;\r\n          const text = `${percentage}%`;\r\n          const x = chart.plotLeft + chart.plotWidth / 1.9;\r\n          const y = chart.plotTop + chart.plotHeight / 2.2 + 10;\r\n          if (chart.customText) {\r\n            chart.customText.destroy();\r\n          }\r\n          chart.customText = chart.renderer\r\n            .text(text, x, y)\r\n            .css({\r\n              fontSize: \"13px\",  \r\n              fontWeight: \"bold\",\r\n              color: \"#333\",\r\n            })\r\n            .attr({\r\n              align: \"center\",\r\n            })\r\n            .add();\r\n        },\r\n      },\r\n    },\r\n    title: {\r\n      text: \"\",\r\n    },\r\n    tooltip: {\r\n      enabled: false,\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        innerSize: \"80%\",\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        data: [\r\n          {\r\n            y: percentage,\r\n            color: color,\r\n          },\r\n          {\r\n            y: 100 - percentage,\r\n            color: \"#e6e6e6\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    // Main Card Div\r\n    <div className=\"card\">\r\n      <div>\r\n        <div className=\"card-header\">\r\n          <h5>Packages On Live</h5>\r\n        </div>\r\n        <div className=\"Packages-cards chart-container\">\r\n          {cardData.map((card) => (\r\n            //  sub cards div\r\n            <div key={card.id} className=\"col-lg-6\">\r\n              <div className=\"card m-1 p-2\"> {/* Adjusted margin and padding for smaller cards */}\r\n                <div className=\"card-body d-flex align-items-center justify-content-between\">\r\n                  <div className=\"\">\r\n                    <p>{card.number}</p>\r\n                    <h6 className=\"fw-bold\">{card.title}</h6>\r\n                  </div>\r\n                  <div className=\"col-lg-6 p-0\"> \r\n                    <HighchartsReact\r\n                      highcharts={Highcharts}\r\n                      options={options}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackagesOnLive;\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport tableData from \"../JsonData/data.json\";\r\nimport \"../orderPagination.scss\"\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction OrderPagination() {\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [dataPerPage, setdataPerPage] =useState([]) \r\n    const itemsPerPage = 5;\r\n    const navigate = useNavigate();\r\n    const totalPages = Math.ceil(tableData.length / itemsPerPage )\r\n        // const totalPages = 10\r\n    const pageNum = [];\r\n    if(totalPages <= 3){\r\n        for(let i=1; i <= totalPages; i++){\r\n            pageNum.push(i)\r\n        }\r\n    }else{\r\n        if (currentPage <= 2) {\r\n            pageNum.push(1, 2, 3, '...', totalPages);\r\n        } else if (currentPage >= totalPages - 1) {\r\n            pageNum.push(1, '...', totalPages - 2, totalPages - 1, totalPages);\r\n        } else {\r\n            pageNum.push(1, '...', currentPage - 1, currentPage, currentPage + 1, '...', totalPages)\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        let arr = []\r\n        for(let i = (currentPage * itemsPerPage ) - itemsPerPage    ; i< currentPage * itemsPerPage ; i++ ){\r\n            arr.push(tableData[i])\r\n        } \r\n        setdataPerPage(arr)\r\n    },[currentPage])\r\n\r\n    const OrdersList = ()=>{\r\n        navigate('/OrdersList')\r\n    }\r\n\r\n    return (\r\n        <div className=\"card dashboard-Order-Cards\">\r\n            <div className=\"card-header d-flex justify-content-between bg-white align-items-center\">\r\n                <h5>Orders</h5>\r\n                <div className=\"\">\r\n                    <button type=\"button\" className=\"border border-0 bg-white text-success \" onClick={OrdersList}>View\r\n                        All</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body p-0 m-0 order-table\">\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">ID</th>\r\n                            <th scope=\"col\">Order</th>\r\n                            <th scope=\"col\">Client Name</th>\r\n                            <th scope=\"col\">Client Contact</th>\r\n                            <th scope=\"col\">Payment Status</th>\r\n                            <th scope=\"col\">Price</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {dataPerPage.map((item, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <th scope=\"row\">{item.id}</th>\r\n                                    <td>{item.order}</td>\r\n                                    <td>{item.clientName}</td>\r\n                                    <td>{item.clientMobileNumber}</td>\r\n                                    <td>{item.paymentStatus}</td>\r\n                                    <td>{item.price}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {/* <!-- Start pagination --> */}\r\n            <div className=\"d-flex justify-content-end px-5 pb-2\">\r\n                    <ul className=\"pagination\">\r\n                        <li className={`page-item pagination-page-items ${currentPage === 1 ? \"disabled\" : \"\" } `} >\r\n                            <button className=\"page-link\"  aria-label=\"Previous\" onClick={()=>setCurrentPage(currentPage - 1)}>\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </button>\r\n                        </li>\r\n                        {pageNum.map((page, i) => {\r\n                            return (\r\n                                <li className= {`page-item pagination-page-items ${currentPage === page ? \"active\": \"\"}`} key={i} >\r\n                                {page === '...' ? (<span className=\"page-link\">...</span>) :\r\n                                (<button className=\"page-link\"  onClick={()=>setCurrentPage(page)} >{page}</button>)}\r\n                                </li>\r\n                            )\r\n                        })}\r\n                        <li className={`page-item pagination-page-items ${currentPage === totalPages ? \"disabled\" : \"\" } `} >\r\n                            <button className=\"page-link\" aria-label=\"Next\" onClick={()=>setCurrentPage(currentPage + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n            </div>\r\n            {/* <!-- End pagination --> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderPagination","// src/SalesChart.js\r\nimport React, { useState } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n// import './SalesChart.css'; // Make sure to import the CSS file\r\n\r\nconst SalesChart = () => {\r\n  const [timeframe, setTimeframe] = useState(\"allTime\");\r\n\r\n  const data = {\r\n    allTime: [\r\n      { year: \"2014\", directBooking: 300, package: 200 },\r\n      { year: \"2015\", directBooking: 350, package: 250 },\r\n      { year: \"2016\", directBooking: 200, package: 450 },\r\n      { year: \"2017\", directBooking: 400, package: 300 },\r\n      { year: \"2018\", directBooking: 500, package: 350 },\r\n      { year: \"2019\", directBooking: 450, package: 400 },\r\n      { year: \"2020\", directBooking: 400, package: 300 },\r\n      { year: \"2021\", directBooking: 350, package: 350 },\r\n      { year: \"2022\", directBooking: 400, package: 400 },\r\n    ],\r\n    thisYear: [{ year: \"2022\", directBooking: 400, package: 400 }],\r\n    thisWeek: [{ year: \"Week 1\", directBooking: 100, package: 150 }],\r\n    today: [{ year: \"Today\", directBooking: 50, package: 70 }],\r\n  };\r\n\r\n  const options = {\r\n    chart: {\r\n      type: \"areaspline\",\r\n    },\r\n    title: {\r\n      text: \"Sales Statistics\",\r\n    },\r\n    xAxis: {\r\n      categories: data[timeframe].map((d) => d.year),\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: \"Sales\",\r\n      },\r\n      min: 0,\r\n      max: 600,\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Direct booking\",\r\n        data: data[timeframe].map((d) => d.directBooking),\r\n        color: \"blue\",\r\n        fillOpacity: 0.3,\r\n        marker: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      {\r\n        name: \"Package\",\r\n        data: data[timeframe].map((d) => d.package),\r\n        color: \"magenta\",\r\n        fillOpacity: 0.3,\r\n        marker: {\r\n          enabled: true,\r\n        },\r\n      },\r\n    ],\r\n    plotOptions: {\r\n      areaspline: {\r\n        marker: {\r\n          enabled: false,\r\n        },\r\n        fillOpacity: 0.3,\r\n        tension: 0.4,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h5>Sales Statistics</h5>\r\n      </div>\r\n      <div className=\"card-body chart-container\">\r\n        <div className=\"sales-stats-tabs\">\r\n          <button \r\n            className={`button ${timeframe === \"allTime\" ? \"active\" : \"\"}`}\r\n            onClick={() => setTimeframe(\"allTime\")}\r\n          >\r\n            All time\r\n          </button>\r\n          <button\r\n            className={`button ${timeframe === \"thisYear\" ? \"active\" : \"\"}`}\r\n            onClick={() => setTimeframe(\"thisYear\")}\r\n          >\r\n            This year\r\n          </button>\r\n          <button\r\n            className={`button ${timeframe === \"thisWeek\" ? \"active\" : \"\"}`}\r\n            onClick={() => setTimeframe(\"thisWeek\")}\r\n          >\r\n            This week\r\n          </button>\r\n          <button\r\n            className={`button ${timeframe === \"today\" ? \"active\" : \"\"}`}\r\n            onClick={() => setTimeframe(\"today\")}\r\n          >\r\n            Today\r\n          </button>\r\n        </div>\r\n        <HighchartsReact highcharts={Highcharts} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesChart;\r\n","import React from \"react\";\r\nimport \"../inquiry.scss\";\r\nimport tableData from \"../inquiry.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Inquiry = () => {\r\n  const navigate = useNavigate()\r\n  const InquiryList = ()=>{\r\n    navigate('/InquiryList')\r\n  }\r\n  return (\r\n    <div className=\"card inquiry\">\r\n      <div className=\"card-header d-flex justify-content-between bg-white align-items-center\">\r\n        <h5>Inquiry</h5>\r\n        <div className=\"\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"border border-0 bg-white text-success \"\r\n            onClick={InquiryList}\r\n          >\r\n            View All\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body p-0 m-0 inquiry-card inquiry-scrollbar\">\r\n        <div className=\"dashbord-table-data-scrollbar \">\r\n          <table className=\"data-table-header-collapse\">\r\n            <tbody>\r\n              {tableData.map((value, i) => {\r\n                return (\r\n                  <tr className=\"table-data-elements d-flex justify-content-around align-items-center\" key={i}>\r\n                    <td className=\"\">\r\n                      <img\r\n                        src={value.imageUrl}\r\n                        class=\"inquiry-profiles\"\r\n                        alt=\"error\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"fw-semibold\">{value.package}</td>\r\n                    <td className=\"fw-semibold\">{value.price}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inquiry;\r\n","import React from \"react\";\r\nimport PackagesOnLive from \"./PackagesOnLive\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport OrderPagination from \"./OrderPagination\";\r\nimport { FaPlus } from \"react-icons/fa6\";\r\nimport SalesChart from \"./SalesChart\";\r\nimport Inquiry from \"./Inquiry\"\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate()\r\n  const handleButtonClick = () => {\r\n    navigate('/PackagesForm');\r\n  };\r\n  return (\r\n\r\n    <div className=\"m-3\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <div>\r\n          <h3 className=\"my-0\">Dashboard</h3>\r\n          <div>Manage your package and customize.</div>\r\n        </div>\r\n        <div>\r\n          <button className=\" btn add-new-button py-1\" onClick={ handleButtonClick}><FaPlus className=\"icon\"/>Add Packages</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6 mb-3\">\r\n          <PackagesOnLive />\r\n        </div>\r\n        <div className=\"col-lg-6 mb-3\">\r\n          <SalesChart/>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-8 mb-3\">\r\n          <OrderPagination />\r\n        </div>\r\n        <div className=\"col-lg-4 mb-3\">\r\n          <Inquiry/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  \r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["cardData","id","number","title","PackagesOnLive","options","chart","type","backgroundColor","height","margin","events","render","this","text","concat","x","plotLeft","plotWidth","y","plotTop","plotHeight","customText","destroy","renderer","css","fontSize","fontWeight","color","attr","align","add","tooltip","enabled","credits","plotOptions","pie","innerSize","dataLabels","series","data","_jsx","className","children","_jsxs","map","card","HighchartsReact","highcharts","Highcharts","currentPage","setCurrentPage","useState","dataPerPage","setdataPerPage","navigate","useNavigate","totalPages","Math","ceil","tableData","length","pageNum","i","push","useEffect","arr","onClick","OrdersList","scope","item","order","clientName","clientMobileNumber","paymentStatus","price","page","SalesChart","timeframe","setTimeframe","allTime","year","directBooking","package","thisYear","thisWeek","today","xAxis","categories","d","yAxis","min","max","name","fillOpacity","marker","areaspline","tension","Inquiry","InquiryList","value","src","imageUrl","class","alt","Dashboard","handleButtonClick","FaPlus","OrderPagination"],"sourceRoot":""}